{"version":3,"sources":["404.js","accordion.js","math_h.js","burger.js","modal.js","zakazat.js","scalable.js"],"names":["document","addEventListener","setCheck","myRadios","getElementsByName","x","length","onclick","el","target","checked","resize_height","max_col_height","max_col_width","columns","getElementsByClassName","i","offsetHeight","offsetWidth","style","height","width","classList","remove","querySelector","toggle","window","onload","setTimeout","column","modal","getElementById","btn","close","item","display","decrement","e","parentNode","parentElement","nextElementSibling","value","Number","increment","key","event","resize_viewport","view","screen","setAttribute","decrementButtons","querySelectorAll","incrementButtons","forEach","MONTH_NAMES","MONTH_SHORT_NAMES","DAYS","app","showDatepicker","datepickerValue","selectedDate","Date","dateFormat","month","year","no_of_days","blankdays","[object Object]","today","this","parse","getMonth","getFullYear","formatDateForDisplay","date","formattedDay","getDay","formattedDate","getDate","slice","formattedMonth","formattedMonthShortName","formattedMonthInNumber","parseInt","formattedYear","d","toDateString","isSelectedDate","daysInMonth","dayOfWeek","blankdaysArray","push","daysArray","range","minprice","maxprice","min","max","minthumb","maxthumb","Math","functionName","currentTargetElement","btns","elem","contains","console","log","push_btn","currentTarget","str"],"mappings":"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","file":"../libs/libs.min.js","sourcesContent":["// let h_header = document.getElementsByTagName('header').offsetHeight;\r\n\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n\r\n    // let h_header = document.getElementsByTagName('header')[0].offsetHeight;\r\n    // let height = document.documentElement.clientHeight;\r\n    // let trueHeight = height - h_header;\r\n    // console.log(h_header);\r\n    // console.log(height);\r\n    // console.log(trueHeight);\r\n    //\r\n    // if (document.documentElement.clientHeight > 600) {\r\n    //\r\n    //     document.querySelector(\".heigh-full\").style.height = trueHeight + \"px\";\r\n    //\r\n    // };\r\n\r\n\r\n});","let myRadios = document.getElementsByName('tabs2');\r\n\r\nlet setCheck;\r\n\r\nfor(let x = 0; x < myRadios.length; x++){\r\n\r\n    myRadios[x].onclick = (el) => {\r\n        if(setCheck !== el.target){\r\n            setCheck = el.target;\r\n        }else{\r\n            el.target.checked = false;\r\n            setCheck = null;\r\n        }\r\n    };\r\n}\r\n\r\n\r\n","function resize_height() {\r\n    let max_col_height = 527; // максимальная высота, первоначально 0\r\n    let max_col_width = 0;\r\n    let columns = document.getElementsByClassName(\"column\"); // получаем массив колонок (всех элементов класса column)\r\n\r\n\r\n    for (let i = 0; i <= columns.length - 1; i++) {\r\n\r\n        if (columns[i].offsetHeight > max_col_height) {\r\n\r\n            max_col_height = columns[i].offsetHeight;\r\n        }\r\n    }\r\n\r\n    if (columns.length > 0) {\r\n\r\n        max_col_width = columns[0].offsetWidth;\r\n\r\n    }\r\n\r\n    for (let i = 0; i <= columns.length - 1; i++) {\r\n        columns[i].style.height = max_col_height + \"px\"; // устанавливаем высоту каждой колонки равной максимальной\r\n\r\n        if (i >= columns.length - 2) {\r\n            columns[i].style.width = max_col_width + \"px\";\r\n            columns[i].classList.remove('flex-grow');\r\n        }\r\n\r\n    }\r\n}\r\n\r\n\r\nwindow.onload = function() {\r\n\r\n   setTimeout(resize_height, 500)\r\n\r\n}\r\n\r\nwindow.addEventListener(\"resize\", function() {\r\n\r\n    let columns = document.getElementsByClassName(\"column\");\r\n    for (let column of columns) {\r\n        column.style.height =  \"\";\r\n    }\r\n\r\n    setTimeout(resize_height,500)\r\n\r\n});\r\n\r\n\r\n\r\n\r\n// var max_col_height = 0; // максимальная высота, первоначально 0\r\n// var columns = document.getElementsByClassName(\"column\"); // получаем массив колонок (всех элементов класса column)\r\n// for (var i = columns.length - 1; i >= 0; i--) { // прокручиваем каждую колонку в цикле\r\n//     if( columns[i].offsetHeight > max_col_height ) {\r\n//         max_col_height = columns[i].offsetHeight; // устанавливаем новое значение максимальной высоты\r\n//     }\r\n// }\r\n// for (var i = columns.length - 1; i >= 0; i--) {\r\n//     columns[i].style.height = max_col_height; // устанавливаем высоту каждой колонки равной максимальной\r\n// }","document.querySelector('.burger').addEventListener('click', function(){\r\n    document.querySelector('.burger span').classList.toggle('active');\r\n    document.querySelector('.menu_mob').classList.toggle(\"animate\");\r\n\r\n})\r\n\r\n","\r\nlet modal = document.getElementById(\"myModal\");\r\n\r\n\r\nlet btn = document.getElementsByClassName(\"myBtn-open\");\r\n\r\n\r\nlet close = document.getElementsByClassName(\"close-btn\")[0];\r\n\r\n\r\nfor (let item of btn){\r\n\r\n    item.onclick = () => {\r\n        modal.style.display = \"block\";\r\n    }\r\n}\r\n\r\n\r\n\r\nclose.onclick = function() {\r\n    modal.style.display = \"none\";\r\n}\r\n\r\ndocument.addEventListener('keydown', function(e) {\r\n    if (e.key === 'Escape') {\r\n\r\n        let modal = document.getElementById(\"myModal\");\r\n        modal.style.display = \"none\";\r\n\r\n    }\r\n\r\n    });\r\n\r\n\r\n\r\n\r\nwindow.onclick = function(event) {\r\n\r\n    if (event.target === modal) {\r\n        modal.style.display = \"none\";\r\n    }\r\n}","//date picker\r\n// const MONTH_NAMES = ['Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'];\r\n// const DAYS = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\r\n//\r\n// const options = {\r\n//     year: 'numeric',\r\n//     month: 'numeric',\r\n//     day: 'numeric',\r\n//     hour: 'numeric',\r\n//     minute: 'numeric',\r\n//     second: 'numeric'\r\n// };\r\n//\r\n// function app() {\r\n//     return {\r\n//         showDatepicker: false,\r\n//         datepickerValue: '',\r\n//         month: '',\r\n//         year: '',\r\n//         dateFormat: \"DD-MM-YYYY\",\r\n//         no_of_days: [],\r\n//         blankdays: [],\r\n//         days: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n//\r\n//         initDate() {\r\n//             let today = new Date();\r\n//             this.month = today.getMonth();\r\n//             this.year = today.getFullYear();\r\n//             this.datepickerValue = new Date(this.year, this.month, today.getDate()).toDateString();\r\n//         },\r\n//\r\n//         isToday(date) {\r\n//             const today = new Date();\r\n//             const d = new Date(this.year, this.month, date);\r\n//\r\n//             return today.toDateString() === d.toDateString();\r\n//         },\r\n//\r\n//         getDateValue(date) {\r\n//             let selectedDate = new Date(this.year, this.month, date);\r\n//             this.datepickerValue = selectedDate.toDateString();\r\n//\r\n//             this.$refs.date.value = selectedDate.getFullYear() +\"-\"+ ('0'+ selectedDate.getMonth()).slice(-2) +\"-\"+ ('0' + selectedDate.getDate()).slice(-2);\r\n//\r\n//\r\n//\r\n//             this.showDatepicker = false;\r\n//         },\r\n//\r\n//         getNoOfDays() {\r\n//             let daysInMonth = new Date(this.year, this.month + 1, 0).getDate();\r\n//\r\n//             // find where to start calendar day of week\r\n//             let dayOfWeek = new Date(this.year, this.month).getDay();\r\n//             let blankdaysArray = [];\r\n//             for ( let i=1; i <= dayOfWeek; i++) {\r\n//                 blankdaysArray.push(i);\r\n//             }\r\n//\r\n//             let daysArray = [];\r\n//             for ( let i=1; i <= daysInMonth; i++) {\r\n//                 daysArray.push(i);\r\n//             }\r\n//\r\n//             this.blankdays = blankdaysArray;\r\n//             this.no_of_days = daysArray;\r\n//         }\r\n//     }\r\n// }\r\n//\r\n// function range() {\r\n//     return {\r\n//         minprice: 3,\r\n//         maxprice: 5,\r\n//         min: 3,\r\n//         max: 8,\r\n//         minthumb: 3,\r\n//         maxthumb: 8,\r\n//\r\n//         mintrigger() {\r\n//             this.minprice = 3;\r\n//             this.minthumb = 0;\r\n//         },\r\n//\r\n//         maxtrigger() {\r\n//             this.maxprice = Math.max(this.maxprice, this.minprice);\r\n//             this.maxthumb = 100 - (((this.maxprice - this.min) / (this.max - this.min)) * 100);\r\n//         },\r\n//     }\r\n// }\r\n// //counter\r\nfunction decrement(e) {\r\n    const btn = e.target.parentNode.parentElement.querySelector(\r\n        'button[data-action=\"decrement\"]'\r\n    );\r\n    const target = btn.nextElementSibling;\r\n    let value = Number(target.value);\r\n    value--;\r\n    target.value = value;\r\n\r\n    if (value < 0) {\r\n        target.value = 0;\r\n    }\r\n}\r\n\r\nfunction increment(e) {\r\n    const btn = e.target.parentNode.parentElement.querySelector(\r\n        'button[data-action=\"decrement\"]'\r\n    );\r\n    const target = btn.nextElementSibling;\r\n    let value = Number(target.value);\r\n    value++;\r\n    target.value = value;\r\n}\r\n\r\nconst decrementButtons = document.querySelectorAll(\r\n    `button[data-action=\"decrement\"]`\r\n);\r\n\r\nconst incrementButtons = document.querySelectorAll(\r\n    `button[data-action=\"increment\"]`\r\n);\r\n\r\ndecrementButtons.forEach(btn => {\r\n    btn.addEventListener(\"click\", decrement);\r\n});\r\n\r\nincrementButtons.forEach(btn => {\r\n    btn.addEventListener(\"click\", increment);\r\n});\r\n\r\n\r\nconst MONTH_NAMES = [\r\n    'Январь', 'Февраль', 'Март', 'Апрель', 'Май', 'Июнь', 'Июль', 'Август', 'Сентябрь', 'Октябрь', 'Ноябрь', 'Декабрь'\r\n];\r\nconst MONTH_SHORT_NAMES = [\r\n    \"Янв\",\r\n    \"Фев\",\r\n    \"Март\",\r\n    \"Апр\",\r\n    \"Май\",\r\n    \"Июнь\",\r\n    \"Июль\",\r\n    \"Август\",\r\n    \"Сент\",\r\n    \"Октябрь\",\r\n    \"Ноябрь\",\r\n    \"Декабрь\",\r\n];\r\nconst DAYS = ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'];\r\n\r\nfunction app() {\r\n    return {\r\n        showDatepicker: false,\r\n        datepickerValue: \"\",\r\n        selectedDate: new Date(),\r\n        dateFormat: \"DD-MM-YYYY\",\r\n        month: \"\",\r\n        year: \"\",\r\n        no_of_days: [],\r\n        blankdays: [],\r\n        initDate() {\r\n            let today;\r\n            if (this.selectedDate) {\r\n                today = new Date(Date.parse(this.selectedDate));\r\n            } else {\r\n                today = new Date();\r\n            }\r\n            this.month = today.getMonth();\r\n            this.year = today.getFullYear();\r\n            this.datepickerValue = this.formatDateForDisplay(\r\n                today\r\n            );\r\n        },\r\n        formatDateForDisplay(date) {\r\n            let formattedDay = DAYS[date.getDay()];\r\n            let formattedDate = (\"0\" + date.getDate()).slice(\r\n                -2\r\n            ); // appends 0 (zero) in single digit date\r\n            let formattedMonth = MONTH_NAMES[date.getMonth()];\r\n            let formattedMonthShortName =\r\n                MONTH_SHORT_NAMES[date.getMonth()];\r\n            let formattedMonthInNumber = (\r\n                \"0\" +\r\n                (parseInt(date.getMonth()) + 1)\r\n            ).slice(-2);\r\n            let formattedYear = date.getFullYear();\r\n            if (this.dateFormat === \"DD-MM-YYYY\") {\r\n                return `${formattedDate}.${formattedMonthInNumber}.${formattedYear}`; // 02-04-2021\r\n            }\r\n            if (this.dateFormat === \"YYYY-MM-DD\") {\r\n                return `${formattedYear}-${formattedMonthInNumber}-${formattedDate}`; // 2021-04-02\r\n            }\r\n            if (this.dateFormat === \"D d M, Y\") {\r\n                return `${formattedDay} ${formattedDate} ${formattedMonthShortName} ${formattedYear}`; // Tue 02 Mar 2021\r\n            }\r\n            return `${formattedDay} ${formattedDate} ${formattedMonth} ${formattedYear}`;\r\n        },\r\n        isSelectedDate(date) {\r\n            const d = new Date(this.year, this.month, date);\r\n            return this.datepickerValue ===\r\n                this.formatDateForDisplay(d);\r\n        },\r\n        isToday(date) {\r\n            const today = new Date();\r\n            const d = new Date(this.year, this.month, date);\r\n            return today.toDateString() === d.toDateString();\r\n        },\r\n        getDateValue(date) {\r\n            let selectedDate = new Date(\r\n                this.year,\r\n                this.month,\r\n                date\r\n            );\r\n            this.datepickerValue = this.formatDateForDisplay(\r\n                selectedDate\r\n            );\r\n            // this.$refs.date.value = selectedDate.getFullYear() + \"-\" + ('0' + formattedMonthInNumber).slice(-2) + \"-\" + ('0' + selectedDate.getDate()).slice(-2);\r\n            this.isSelectedDate(date);\r\n            this.showDatepicker = false;\r\n        },\r\n        getNoOfDays() {\r\n            let daysInMonth = new Date(\r\n                this.year,\r\n                this.month + 1,\r\n                0\r\n            ).getDate();\r\n            // find where to start calendar day of week\r\n            let dayOfWeek = new Date(\r\n                this.year,\r\n                this.month\r\n            ).getDay();\r\n            let blankdaysArray = [];\r\n            for (let i = 1; i <= dayOfWeek; i++) {\r\n                blankdaysArray.push(i);\r\n            }\r\n            let daysArray = [];\r\n            for (let i = 1; i <= daysInMonth; i++) {\r\n                daysArray.push(i);\r\n            }\r\n            this.blankdays = blankdaysArray;\r\n            this.no_of_days = daysArray;\r\n        },\r\n    };\r\n}\r\n\r\nfunction range() {\r\n    return {\r\n        minprice: 3,\r\n        maxprice: 5,\r\n        min: 3,\r\n        max: 8,\r\n        minthumb: 3,\r\n        maxthumb: 8,\r\n\r\n        mintrigger() {\r\n            this.minprice = 3;\r\n            this.minthumb = 0;\r\n        },\r\n\r\n        maxtrigger() {\r\n            this.maxprice = Math.max(this.maxprice, this.minprice);\r\n            this.maxthumb = 100 - (((this.maxprice - this.min) / (this.max - this.min)) * 100);\r\n        },\r\n    }\r\n}\r\n\r\n//mass null\r\n\r\nfunction functionName(currentTargetElement) {\r\n\r\n    let btns = currentTargetElement.getElementsByClassName('push-button')\r\n\r\n    //console.log(\"111\",btns)\r\n\r\n    for (let elem of btns) {\r\n\r\n        if (elem.classList.contains('activated')) {\r\n\r\n            elem.classList.remove('activated');\r\n            elem.classList.remove(\"not-shadow-mass-button\");\r\n\r\n        } else {\r\n            console.log('не нашел')\r\n\r\n        }\r\n\r\n\r\n    }\r\n};\r\n\r\nfunction push_btn(e) {\r\n\r\n    if (e.currentTarget.parentNode.parentElement.classList.contains('selected-1')) {\r\n\r\n        functionName(e.currentTarget.parentNode.parentElement);\r\n\r\n    }\r\n\r\n    this.classList.toggle(\"activated\");\r\n\r\n    this.classList.toggle('not-shadow-mass-button');\r\n\r\n}\r\n\r\n//push button\r\n\r\n// Выбираем все кнопки на странице и получаем массив\r\nlet btns = document.querySelectorAll('.push-button')\r\n\r\n// Проходим по массиву\r\nbtns.forEach(function (btn) {\r\n\r\n    str = 0;\r\n//\r\n//     // Вешаем событие клик\r\n    btn.addEventListener('click', push_btn)\r\n})\r\n\r\n","document.addEventListener(\"DOMContentLoaded\", function(){\r\n\r\n    resize_viewport ();\r\n\r\n    function resize_viewport (){\r\n\r\n        let view = document.getElementById('view');\r\n\r\n        if (screen.width < 414) {\r\n\r\n            view.setAttribute('content', 'width=414, user-scalable=no');\r\n\r\n        } else {\r\n\r\n            view.setAttribute('content', 'width=device-width, initial-scale=1.0, user-scalable=no');\r\n        }\r\n\r\n    }\r\n\r\n    window.addEventListener(`resize`, () => {\r\n\r\n        resize_viewport ();\r\n\r\n\r\n    });\r\n});\r\n\r\n\r\n\r\n"]}